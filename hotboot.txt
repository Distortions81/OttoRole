
#HOTBOOT (always low ram v2)
Decouple discord code from processing code with a queue (possibly fixed-size prealloc pointers)

1: Reboot event (signal from compile script, delete after detected)
2: Start new server with -hotboot, once connected child replies (ready).
Child does not load DB. It will only process guilds it has in hotboot mode (no auto-create we should do this on new_intergation anyway)

3: lock one guild, send to child, delete/unlock guild (defer?), repeat for all guilds with sleeps. May need to trigger GC every X guilds.
if incoming request goes to a nil guild, forward to child (directly into queue)

4: once all guilds transfered, parent can disconnect from discord and tell child goodbye.
5: on goodbye, child exits hotboot mode.

Probably transfer with glob or db format.
Need starting identifyier for guild data / forwarded requests
This could be done over stdio or TCP.



#SHARD MODEL
list-server (database/worker list, shard-count), databases and workers(shard)

list server is just a list of databases and workers and their status, along with a shard count.

workers handle discord requests and cache data for guilds their shard would serve or not yet verfied-saved by databases.

databases mostly record data, and reply back when when recieved, and again when saved to disk.
But also can send specific guild data when requested. (brand-new workers, shard number changes)


workers boot, ask list-server for list of databases or use cached list if no response.
workers connect to databases and distribute requests among them as possible to get data they need to serve requests.
once loaded, workers send new data to all databases, and keep track of what databases have recieved or verfied receipt of data.
workers will keep trying to send data to databases until marked clean or database marked dead (or some timeout). Possibly exponetial delay.

worker hotboot: boots child, child ignores any requests it does not know about '-hotboot'
child gets list of all data from parent, once complete parent dies leaving child, child exits hotboot mode and becomes parent.

worker shutdown: tell list server we will be offline (temporary, or dying), and to change shard count/ids (for full reboots)
worker should wait until list server replies that all workers are notified and ready.

workers can change their shard count and get new shard-number, and request data from databases if a requst comes in we don't have data for.

THOUGHT:
if the worker was marked dead, we should slowly pull in all guild data we need, otherwise just request as-needed?
possily purge and GC any guilds we no longer serve.

Debate: snapshot on specific bloat size, and/or on reboots.
Snapshots should be quite fast with only 2500 guilds.
daily and/or bloat size could be fine.
